{"version":3,"sources":["actions/index.js","components/NewTaskForm.jsx","components/Tasks.jsx","reducers/index.js","index.jsx"],"names":["addTask","createAction","removeTask","toggleTaskState","actionCreators","actions","NewTaskForm","handleSubmit","values","props","reset","task","id","_","uniqueId","state","this","className","onSubmit","Field","name","required","component","type","React","Component","ConnectedTaskForm","connect","reduxForm","form","Tasks","handleRemoveTask","handleToggleTaskState","tasks","length","map","text","key","checked","onChange","htmlFor","data-test","onClick","byId","allIds","handleActions","payload","omit","without","newTaskState","updatedTask","combineReducers","formReducer","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"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","file":"static/js/main.429d14b3.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const addTask = createAction('TASK_ADD');\nexport const removeTask = createAction('TASK_REMOVE');\nexport const toggleTaskState = createAction('TASK_STATE_TOGGLE');\n","import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport * as actions from '../actions/index.js';\n\nconst mapStateToProps = () => {\n  const props = {};\n  return props;\n};\n\nconst actionCreators = {\n  addTask: actions.addTask,\n};\n\nclass NewTaskForm extends React.Component {\n  handleSubmit = (values) => {\n    const { addTask, reset } = this.props;\n    const task = { ...values, id: _.uniqueId(), state: 'active' };\n    addTask({ task });\n    reset();\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n\n    return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-8 col-md-6\">\n      <form className=\"form-inline justify-content-center\" onSubmit={handleSubmit(this.handleSubmit)}>\n        <div className=\"form-group\">\n          <Field name=\"text\" required component=\"input\" type=\"text\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary btm-sm\">Add</button>\n      </form>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst ConnectedTaskForm = connect(mapStateToProps, actionCreators)(NewTaskForm);\n\nexport default reduxForm({\n  form: 'newTask'\n})(ConnectedTaskForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index.js';\n\nconst mapStateToProps = (state) => {\n  const { tasks: { byId, allIds } } = state;\n  const tasks = allIds.map((id) => byId[id]);\n  const props = { tasks };\n  return props;\n}\n\nconst actionCreators = {\n  removeTask: actions.removeTask,\n  toggleTaskState: actions.toggleTaskState,\n}\n\nclass Tasks extends React.Component {\n  handleRemoveTask = (id) => () => {\n    const { removeTask } = this.props;\n    removeTask({ id });\n  }\n\n  handleToggleTaskState = (id) => () => {\n    const { toggleTaskState } = this.props;\n    toggleTaskState({ id });\n  }\n\n  render() {\n    const { tasks } = this.props;\n\n    if (tasks.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-12 col-sm-10 col-md-8\">\n          {tasks.map(({ id, text, state }) => (\n            <li key={id} className=\"list-group-item d-flex\">\n              <span className=\"mr-auto\">\n                <input id={`input${id}`} type=\"checkbox\" checked={state === 'finished'} onChange={this.handleToggleTaskState(id)} />\n                <label htmlFor={`input${id}`}>\n                  {state === 'active' ? text : <s>{text}</s>}\n                </label>\n              </span>\n              <button type=\"button\" data-test=\"task-remove\" className=\"close\" onClick={this.handleRemoveTask(id)}>\n                <span>&times;</span>\n              </button>\n            </li>\n          ))}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Tasks);\n","import _ from 'lodash';\nimport { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport { reducer as formReducer } from 'redux-form';\nimport * as actions from '../actions/index.js';\n\nconst tasks = handleActions({\n  [actions.addTask](state, { payload: { task } }) {\n    const { byId, allIds } = state;\n    return {\n      byId: { ...byId, [task.id]: task },\n      allIds: [task.id, ...allIds],\n    };\n  },\n  [actions.removeTask](state, { payload: { id } }) {\n    const { byId, allIds } = state;\n    return {\n      byId: _.omit(byId, id),\n      allIds: _.without(allIds, id),\n    };\n  },\n  [actions.toggleTaskState](state, { payload: { id } }) {\n    const task = state.byId[id];\n    const newTaskState = task.state === 'active' ? 'finished' : 'active';\n    const updatedTask = { ...task, state: newTaskState };\n    return {\n      ...state,\n      byId: { ...state.byId, [task.id]: updatedTask },\n    };\n  },\n}, { byId: {}, allIds: [] });\n\nexport default combineReducers({\n  tasks,\n  form: formReducer,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './css/index.css';\nimport NewTaskForm from './components/NewTaskForm.jsx';\nimport Tasks from './components/Tasks.jsx';\nimport reducers from './reducers/index.js';\n\nconst store = createStore(\n\treducers,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nrender(\n\t<Provider store={store} >\n\t\t<NewTaskForm />\n\t\t<Tasks />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}